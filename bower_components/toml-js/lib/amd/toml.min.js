(function(r,n){"object"==typeof exports?module.exports=n():"function"==typeof define&&define.amd&&define(n)})(this,function(){var toml=function(){var parseGroup=function(r,n){function e(r){var n=r.indexOf("["),e=r.indexOf("]");return r.substring(n+1,e)}function t(r){return r.split(".")}function u(n,e){if(n[e])throw Error('"'+e+'" is overriding existing value');var t=n[e]={};r.currentGroup=t}function i(r,n){n.reduce(function(n,e){return r[n]||u(r,n),u(r[n],e),e})}var a=r.result,o=e(n);if(-1!==o.indexOf(".")){var s=t(o);i(a,s)}else u(a,o)},parseExpression=function(context,line){function parseNameValue(r){var n=r.indexOf("=");return{name:r.substring(0,n),value:r.substring(n+1)}}function parseValue(r){function n(r){return"["===r.charAt(0)&&"]"===r.charAt(r.length-1)}return n(r)?parseArray(r):parsePrimitive(r)}function parseArray(r){function n(r){function n(r){for(var n=[],e=0,t=0;r.length>t;t++){var u=r[t];"["===u?e++:"]"===u&&e--,","===u&&0===e&&n.push(t)}return n.push(r.length),n}var e=[],t=r.substring(1,r.length-1),u=n(t);return u.reduce(function(r,n){return e.push(t.substring(r+1,n)),n},-1),e}var e=n(r);return e.map(function(r){return parseValue(r)})}function parsePrimitive(value){function date(r){return/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z/.test(r)}return date(value)?new Date(value):eval(value)}var pair=parseNameValue(line),value=parseValue(pair.value),currentGroup=context.currentGroup||context.result;currentGroup[pair.name]=value},parseLine=function(r,n){function e(r){return"["===r.charAt(0)}function t(r){return r.indexOf("=")>0}function u(r){return""===r}function i(){delete r.currentGroup}e(n)?parseGroup(r,n):t(n)?parseExpression(r,n):u(n)&&i()},parse=function(r,n){function e(r){return r.replace(/\s/g,"")}function t(r){return r.split("#")[0]}function u(r){function n(r){return-1!==r.indexOf("[")&&-1===r.indexOf("]")}function e(r){return-1!==r.indexOf("]")}var t=[],u=[],i=!1,a=!1;return r.forEach(function(r){n(r)&&(i=!0),i&&e(r)&&(a=!0),i?u.push(r):t.push(r),a&&(i=!1,a=!1,t.push(u.join("")),u=[])}),t}u(n).forEach(function(n){n=t(e(n)),parseLine(r,n)})},startParser=function(r){var n={};n.result={};var e=(""+r).split("\n");return parse(n,e),n.result};return{parse:startParser}}();return toml});